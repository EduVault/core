{
  "name": "@eduvault/core",
  "version": "1.0.0",
  "description": "Backend api server, the main app, and the homepage",
  "main": "api/dist/index.js",
  "scripts": {
    "---------unit-test------------": "-------------------",
    "test:api": "cd ./api && npm run test",
    "test:api:watch": "cd ./api && npm run test:watch",
    "test:app": "cd ./app && npm run test",
    "test": "run-s test:*",
    "---------e2e-test-------------": "-------------------",
    "e2e:open": "cypress open",
    "e2e": "cypress run",
    "---------dev-run--------------": "-------------------",
    "dev:api": "cd ./api && npm run dev",
    "dev:app": "cd ./app && npm run dev",
    "dev": "dotenv -e dev.env run-p dev:*",
    "---------build---------------": "--------------------",
    "build:api": "cd ./api && npm run build",
    "build:app": "cd ./app && npm run build",
    "build": "npm run build:app && npm run build:api",
    "build:start": "npm run build && npm run start",
    "---------start---------------": "--------------------",
    "start:local": "env USE_HTTPS=true npm run start",
    "start:local:docker": "docker-compose down &&docker-compose up",
    "start:api": "cd ./api && npm run start",
    "start:ci": "docker-compose down && docker-compose up --build -d && npm run e2e",
    "start:production": "sudo docker-compose -f docker-compose-prod.yml down --remove-orphans && sudo docker-compose -f docker-compose-prod.yml up -d",
    "start:production:logs": "sudo docker-compose -f docker-compose-prod.yml down --remove-orphans && sudo docker-compose -f docker-compose-prod.yml up",
    "start": "dotenv npm run start:api",
    "---------https/ssl certs-----": "--------------------",
    "ssl-certs:local": "dotenv -e dev.env bash ./deploy/ssl-certs.sh local",
    "ssl-certs:ci": "bash ./deploy/ssl-certs.sh ci",
    "ssl-certs:prod": "bash ./deploy/ssl-certs.sh prod",
    "---------install and clean---": "--------------------",
    "inst:api": "cd ./api && npm install",
    "inst:app": "cd ./app && npm install",
    "inst": "npm install && npm run inst:api && npm run inst:app",
    "inst:ci": "npm ci --production && cd ./api && npm ci && cd ../app && npm ci",
    "clean": "rm -rf app/build; rm -rf api/dist;  rm app/package-lock.json; rm api/package-lock.json; rm -rf app/node_modules; rm -rf api/node_modules; rm -rf node_modules; rm package-lock.json",
    "---------Link/unlink SDK---": "--------------------",
    "link-sdk": "dotenv -e dev.env -- bash -c 'cd $SDK_PATH ; pwd ; echo $SDK_PATH $PROJECT_PATH ; npm link ; cd $PROJECT_PATH/app ; npm link @eduvault/sdk-js'",
    "unlink-sdk": "cd app && npm unlink @eduvault/sdk-js ; rm -rf app/node_modules/@eduvault/sdk-js ; npm install @eduvault/sdk-js",
    "---------Publish---": "--------------------",
    "prepare": "husky install"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/EduVault/server.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/EduVault/server/issues"
  },
  "homepage": "https://github.com/EduVault/server#readme",
  "devDependencies": {
    "cypress": "^8.4.1",
    "dotenv-cli": "^4.0.0",
    "husky": "^7.0.0"
  },
  "dependencies": {
    "make-cert": "^1.2.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^4.4.3",
    "wait-on": "^6.0.0"
  }
}
